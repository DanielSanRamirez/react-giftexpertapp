{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputVaue","setInputVaue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGe,SAASA,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EAEjBC,mBAAS,IAFQ,mBAE5CC,EAF4C,KAEjCC,EAFiC,KAmBnD,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAUK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAa,MAOjB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAaE,EAAEQ,OAAOF,Y,mCCRjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCEL,SAASO,EAAT,GAAuC,EAAjBJ,GAAkB,IAAdC,EAAa,EAAbA,MAAOV,EAAM,EAANA,IAE5C,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,OCHD,SAASO,EAAT,GAAgC,IAAbnB,EAAY,EAAZA,SAAY,ECDlB,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkBtC,OAVAC,qBAAU,WACNxB,EAAQC,GAAUwB,MACd,SAAAC,GAAI,OACAH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDf2BK,CAAa1B,GAAjCa,EAF4B,EAElCN,KAAca,EAFoB,EAEpBA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAACK,EAAD,eAEQL,GADCA,EAAIC,YEiBtBgB,MA/Bf,WAAyB,IAAD,EAEgBzC,mBAAS,CAAC,cAF1B,mBAEb0C,EAFa,KAED3C,EAFC,KASpB,OACI,qCACI,8CACA,cAACD,EAAD,CAAaC,cAAeA,IAC5B,uBAIA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAACmB,EAAD,CAEInB,SAAUA,GADLA,Y,MCpBjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2f120028.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function AddCategory({ setCategories }) {\r\n\r\n    const [inputVaue, setInputVaue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputVaue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // Previene que no se recargue la página\r\n\r\n        if (inputVaue.trim().length > 2) {\r\n            setCategories(cats => [inputVaue, ...cats]);\r\n            setInputVaue('');\r\n        }\r\n\r\n    }\r\n\r\n    // Si ya regreso un form no es necesario dejar las etiquetas vacías\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputVaue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=YpijsnM0tko06RgHHN5rWHyh1hkgfUvc`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport default function GifGridItem({id, title, url}) {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nexport default function GifGrid({ category }) {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map((img) => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    // Se ejecuta 1 sola vez cuando se inicia el componente por las dependencias que se esta enviando []\r\n    useEffect(() => {\r\n        getGifs(category).then(\r\n            imgs =>\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n        );\r\n    }, [category]);\r\n\r\n    return state; // objeto\r\n\r\n}\r\n\r\n","// Para importar react rapido se hace con el snniper imr + tab\r\nimport React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nfunction GifExpertApp() {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    /*const handleAdd = () => {\r\n        setCategories(['Spiderman', ...categories]); // Con setCategories estoy sobreescribiendo\r\n        // setCategories(cats => [...cats, 'Spiderman']); También funciona\r\n    }*/\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            {/*<button onClick={handleAdd}>Agregar</button>*/}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}